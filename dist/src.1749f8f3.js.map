{"version":3,"sources":["src/utils.ts","src/key-input.ts","src/constants.ts","src/game-object.ts","src/rocket.ts","node_modules/js-binary-schema-parser/lib/index.js","node_modules/js-binary-schema-parser/lib/parsers/uint8.js","node_modules/js-binary-schema-parser/lib/schemas/gif.js","node_modules/gifuct-js/lib/deinterlace.js","node_modules/gifuct-js/lib/lzw.js","node_modules/gifuct-js/lib/index.js","src/ship.ts","src/player-ship.ts","src/particle.ts","src/exploded-ship.ts","src/enemy-ship.ts","src/game-screen.ts","src/scrolling-sprite.ts","src/mouse-input.ts","src/menu-screen.ts","src/splash-screen.ts","src/game.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.1749f8f3.js","sourceRoot":"..","sourcesContent":["import EnemyShip from \"./enemy-ship\";\nimport Game from \"./game\";\nimport Particle from \"./particle\";\nimport Rocket from \"./rocket\";\nimport Ship from \"./ship\";\n\nexport function detectCollision(object: Ship | Rocket | EnemyShip, object2: Ship | Rocket | EnemyShip): boolean {\n  let bottomOfObject = object.position.y + object.height;\n  let topOfObject = object.position.y;\n  let leftOfObject = object.position.x;\n  let rightOfObject = object.position.x + object.width;\n\n  let topOfObject2 = object2.position.y;\n  let leftSideOfObject2 = object2.position.x;\n  let rightSideOfObject2 = object2.position.x + object2.width;\n  let bottomOfObject2 = object2.position.y + object2.height;\n\n  if (\n    bottomOfObject >= topOfObject2 &&\n    topOfObject <= bottomOfObject2 &&\n    leftOfObject >= leftSideOfObject2 &&\n    rightOfObject <= rightSideOfObject2\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function outsideOfGame(object: Ship | Rocket | EnemyShip | Particle, gameObject: Game): boolean {\n  let bottomOfObject = object.position.y + object.height;\n  let topOfObject = object.position.y;\n  let leftOfObject = object.position.x;\n  let rightOfObject = object.position.x + object.width;\n\n  if (\n    topOfObject >= gameObject.gameHeight ||\n    bottomOfObject <= 0 ||\n    leftOfObject >= gameObject.gameWidth ||\n    rightOfObject <= 0\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n\n}\n\nexport function randomIntFromInterval(min: number, max: number): number { // min and max included \n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function debounce(func: Function, wait: number) {\n  let timeout: any;\n\n  return function executedFunction(...args) {\n\n    const later = () => {\n      timeout = null;\n      \n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nexport function plusOrMinus(): number { \n  return Math.random() < 0.5 ? -1 : 1;\n}","import { debounce } from './utils';\nimport Game from './game';\nimport PlayerShip from './player-ship';\n\nexport default class KeyInputHandler {\n  constructor(ship: PlayerShip, game: Game) {\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\n      // console.log('keydown', ship.speed, event.code);\n      switch (event.code) {\n        case 'ArrowLeft':\n          ship.moveLeft();\n          break;\n\n        case 'ArrowUp':\n          ship.moveUp();\n          break;\n\n        case 'ArrowRight':\n          ship.moveRight();\n          break;\n\n        case 'ArrowDown':\n          ship.moveDown();\n          break;\n\n        case 'Space':\n          ship.shoot();\n          break;\n\n        case 'KeyS':\n          game.start();\n          break;\n\n        case 'KeyM':\n          game.menu();\n          break;\n  \n      }\n    });\n\n    document.addEventListener('keyup', debounce((event: KeyboardEvent) => {\n      // console.log('keyup', ship.speed, event.code);\n      switch (event.code) {\n        case 'ArrowLeft':\n          // if (ship.speed.x < 0) \n          ship.stop();\n          break;\n\n        case 'ArrowUp':\n          // if (ship.speed.y < 0) \n          ship.stop();\n          break;\n\n        case 'ArrowRight':\n          // if (ship.speed.x > 0) \n          ship.stop();\n          break;\n\n        case 'ArrowDown':\n          // if (ship.speed.y > 0) \n          ship.stop();\n          break;\n      }\n    }, 50));\n  }\n}\n","import { ISpeed } from './interfaces';\n\nexport const GAMESTATE = {\n  PAUSED: 0,\n  RUNNING: 1,\n  MENU: 2,\n  GAMEOVER: 3,\n  SPLASH_SCREEN: 4\n};\n\nexport const DIRECTION = {\n  LEFT: 0,\n  RIGHT: 1,\n  UP: 2,\n  DOWN: 3\n};\n\nexport const OBJECT_TYPE = {\n  PLAYER_SHIP: 0,\n  ENEMY_SHIP: 1,\n  ROCKET: 2,\n  PARTICLE: 3,\n  PARTICLES: 4\n};\n\nexport const SHIP_MAX_SPEED: readonly<ISpeed> = { x: 2, y: 2 };\n","import { IPosition, ISpeed } from \"./interfaces\";\nimport Game from './game';\n\nexport default class GameObject {\n  protected game: Game\n  protected image: HTMLImageElement | undefined;\n  protected angle: number = 0;\n  public width: number;\n  public height: number;\n  public position: IPosition = {x: 0, y: 0};\n  public speed: ISpeed = {x: 0, y: 0};\n  public isDeleted: boolean = false;\n  public type: number = 0;\n  public color: string = '#0ff';\n\n  constructor(width: number, height: number, position: IPosition, speed: ISpeed, game: Game) {\n    this.width = width;\n    this.height = height;\n    this.game = game;\n    this.position.x = position.x;\n    this.position.y = position.y;\n    this.speed.x = speed.x;\n    this.speed.y = speed.y;\n  }\n\n  loadImage(image: string) {\n    this.image = new Image(this.width, this.height);\n    this.image.src = image;\n  }\n\n  speedUpdate(): void {\n    this.position.x += this.speed.x;\n    this.position.y += this.speed.y;\n    this.setAngle();\n  }\n\n  setAngle(): void {\n    if (this.speed.x > 0 && this.speed.y > 0) {\n      this.angle = 135 * Math.PI / 180;\n    }\n    if (this.speed.x > 0 && this.speed.y === 0) {\n      this.angle = 90 * Math.PI / 180;\n    }\n    if (this.speed.x > 0 && this.speed.y < 0) {\n      this.angle = 45 * Math.PI / 180;\n    }\n\n    if (this.speed.x === 0 && this.speed.y > 0) {\n      this.angle = 180 * Math.PI / 180;\n    }\n    if (this.speed.x === 0 && this.speed.y < 0) {\n      this.angle = 0 * Math.PI / 180;\n    }\n\n    if (this.speed.x < 0 && this.speed.y > 0) {\n      this.angle = 225 * Math.PI / 180;\n    }\n    if (this.speed.x < 0 && this.speed.y === 0) {\n      this.angle = 270 * Math.PI / 180;\n    }\n    if (this.speed.x < 0 && this.speed.y < 0) {\n      this.angle = 315 * Math.PI / 180;\n    }\n  }\n}\n","import { OBJECT_TYPE } from \"./constants\";\nimport { outsideOfGame, detectCollision } from \"./utils\";\nimport GameObject from \"./game-object\";\nimport { IPosition, ISpeed } from \"./interfaces\";\nimport Game from \"./game\";\n\nconst ROCKET_SPEED: readonly<ISpeed> = { x: 4, y: 4 };\nexport default class Rocket extends GameObject {\n\n  constructor(game: Game, position: IPosition, speed: ISpeed) {\n    let rocketSpeed = { x: 0, y: 0 };\n    if (speed.x === 0 && speed.y === 0) {\n      rocketSpeed.x = ROCKET_SPEED.x;\n      rocketSpeed.y = 0;\n    } else {\n      rocketSpeed = {\n       x: speed.x > 0 ? ROCKET_SPEED.x : speed.x < 0 ? -ROCKET_SPEED.x : 0,\n       y: speed.y > 0 ? ROCKET_SPEED.y : speed.y < 0 ? -ROCKET_SPEED.y : 0\n     }\n    }\n\n    super(10, 10, position, rocketSpeed, game);\n    this.type = OBJECT_TYPE.ROCKET;\n    this.color = '#f00';\n    this.loadImage('assets/rocket.png');\n  }\n\n  update() {\n    this.speedUpdate();\n    if (outsideOfGame(this, this.game)){\n      this.isDeleted = true;\n    } else {\n      const enemies = this.game.gameObjects.filter((object: any) => object.type === OBJECT_TYPE.ENEMY_SHIP);\n      if (enemies) {\n        enemies.forEach((enemy: any) => {\n          if (detectCollision(this, enemy)) {\n            enemy.exploded = true;\n            this.isDeleted = true;\n          }\n        });\n      }\n    }\n  }\n \n   draw(ctx: CanvasRenderingContext2D) {\n    if (this.image) {\n      ctx.save();\n      ctx.translate(this.position.x + this.width / 2, this.position.y + this.height / 2); \n      ctx.rotate(this.angle);\n      ctx.translate(-(this.position.x + this.width / 2), -(this.position.y + this.height / 2)); \n      ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\n      ctx.restore();\n    } else {\n      ctx.fillStyle = this.color;\n      ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loop = exports.conditional = exports.parse = void 0;\n\nvar parse = function parse(stream, schema) {\n  var result = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var parent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : result;\n\n  if (Array.isArray(schema)) {\n    schema.forEach(function (partSchema) {\n      return parse(stream, partSchema, result, parent);\n    });\n  } else if (typeof schema === 'function') {\n    schema(stream, result, parent, parse);\n  } else {\n    var key = Object.keys(schema)[0];\n\n    if (Array.isArray(schema[key])) {\n      parent[key] = {};\n      parse(stream, schema[key], result, parent[key]);\n    } else {\n      parent[key] = schema[key](stream, result, parent, parse);\n    }\n  }\n\n  return result;\n};\n\nexports.parse = parse;\n\nvar conditional = function conditional(schema, conditionFunc) {\n  return function (stream, result, parent, parse) {\n    if (conditionFunc(stream, result, parent)) {\n      parse(stream, schema, result, parent);\n    }\n  };\n};\n\nexports.conditional = conditional;\n\nvar loop = function loop(schema, continueFunc) {\n  return function (stream, result, parent, parse) {\n    var arr = [];\n\n    while (continueFunc(stream, result, parent)) {\n      var newParent = {};\n      parse(stream, schema, result, newParent);\n      arr.push(newParent);\n    }\n\n    return arr;\n  };\n};\n\nexports.loop = loop;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readBits = exports.readArray = exports.readUnsigned = exports.readString = exports.peekBytes = exports.readBytes = exports.peekByte = exports.readByte = exports.buildStream = void 0;\n\n// Default stream and parsers for Uint8TypedArray data type\nvar buildStream = function buildStream(uint8Data) {\n  return {\n    data: uint8Data,\n    pos: 0\n  };\n};\n\nexports.buildStream = buildStream;\n\nvar readByte = function readByte() {\n  return function (stream) {\n    return stream.data[stream.pos++];\n  };\n};\n\nexports.readByte = readByte;\n\nvar peekByte = function peekByte() {\n  var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return function (stream) {\n    return stream.data[stream.pos + offset];\n  };\n};\n\nexports.peekByte = peekByte;\n\nvar readBytes = function readBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos += length);\n  };\n};\n\nexports.readBytes = readBytes;\n\nvar peekBytes = function peekBytes(length) {\n  return function (stream) {\n    return stream.data.subarray(stream.pos, stream.pos + length);\n  };\n};\n\nexports.peekBytes = peekBytes;\n\nvar readString = function readString(length) {\n  return function (stream) {\n    return Array.from(readBytes(length)(stream)).map(function (value) {\n      return String.fromCharCode(value);\n    }).join('');\n  };\n};\n\nexports.readString = readString;\n\nvar readUnsigned = function readUnsigned(littleEndian) {\n  return function (stream) {\n    var bytes = readBytes(2)(stream);\n    return littleEndian ? (bytes[1] << 8) + bytes[0] : (bytes[0] << 8) + bytes[1];\n  };\n};\n\nexports.readUnsigned = readUnsigned;\n\nvar readArray = function readArray(byteSize, totalOrFunc) {\n  return function (stream, result, parent) {\n    var total = typeof totalOrFunc === 'function' ? totalOrFunc(stream, result, parent) : totalOrFunc;\n    var parser = readBytes(byteSize);\n    var arr = new Array(total);\n\n    for (var i = 0; i < total; i++) {\n      arr[i] = parser(stream);\n    }\n\n    return arr;\n  };\n};\n\nexports.readArray = readArray;\n\nvar subBitsTotal = function subBitsTotal(bits, startIndex, length) {\n  var result = 0;\n\n  for (var i = 0; i < length; i++) {\n    result += bits[startIndex + i] && Math.pow(2, length - i - 1);\n  }\n\n  return result;\n};\n\nvar readBits = function readBits(schema) {\n  return function (stream) {\n    var _byte = readByte()(stream); // convert the byte to bit array\n\n\n    var bits = new Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      bits[7 - i] = !!(_byte & 1 << i);\n    } // convert the bit array to values based on the schema\n\n\n    return Object.keys(schema).reduce(function (res, key) {\n      var def = schema[key];\n\n      if (def.length) {\n        res[key] = subBitsTotal(bits, def.index, def.length);\n      } else {\n        res[key] = bits[def.index];\n      }\n\n      return res;\n    }, {});\n  };\n};\n\nexports.readBits = readBits;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = require(\"../\");\n\nvar _uint = require(\"../parsers/uint8\");\n\n// a set of 0x00 terminated subblocks\nvar subBlocksSchema = {\n  blocks: function blocks(stream) {\n    var terminator = 0x00;\n    var chunks = [];\n    var total = 0;\n\n    for (var size = (0, _uint.readByte)()(stream); size !== terminator; size = (0, _uint.readByte)()(stream)) {\n      chunks.push((0, _uint.readBytes)(size)(stream));\n      total += size;\n    }\n\n    var result = new Uint8Array(total);\n    var offset = 0;\n\n    for (var i = 0; i < chunks.length; i++) {\n      result.set(chunks[i], offset);\n      offset += chunks[i].length;\n    }\n\n    return result;\n  }\n}; // global control extension\n\nvar gceSchema = (0, _.conditional)({\n  gce: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    byteSize: (0, _uint.readByte)()\n  }, {\n    extras: (0, _uint.readBits)({\n      future: {\n        index: 0,\n        length: 3\n      },\n      disposal: {\n        index: 3,\n        length: 3\n      },\n      userInput: {\n        index: 6\n      },\n      transparentColorGiven: {\n        index: 7\n      }\n    })\n  }, {\n    delay: (0, _uint.readUnsigned)(true)\n  }, {\n    transparentColorIndex: (0, _uint.readByte)()\n  }, {\n    terminator: (0, _uint.readByte)()\n  }]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xf9;\n}); // image pipeline block\n\nvar imageSchema = (0, _.conditional)({\n  image: [{\n    code: (0, _uint.readByte)()\n  }, {\n    descriptor: [{\n      left: (0, _uint.readUnsigned)(true)\n    }, {\n      top: (0, _uint.readUnsigned)(true)\n    }, {\n      width: (0, _uint.readUnsigned)(true)\n    }, {\n      height: (0, _uint.readUnsigned)(true)\n    }, {\n      lct: (0, _uint.readBits)({\n        exists: {\n          index: 0\n        },\n        interlaced: {\n          index: 1\n        },\n        sort: {\n          index: 2\n        },\n        future: {\n          index: 3,\n          length: 2\n        },\n        size: {\n          index: 5,\n          length: 3\n        }\n      })\n    }]\n  }, (0, _.conditional)({\n    lct: (0, _uint.readArray)(3, function (stream, result, parent) {\n      return Math.pow(2, parent.descriptor.lct.size + 1);\n    })\n  }, function (stream, result, parent) {\n    return parent.descriptor.lct.exists;\n  }), {\n    data: [{\n      minCodeSize: (0, _uint.readByte)()\n    }, subBlocksSchema]\n  }]\n}, function (stream) {\n  return (0, _uint.peekByte)()(stream) === 0x2c;\n}); // plain text block\n\nvar textSchema = (0, _.conditional)({\n  text: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    preData: function preData(stream, result, parent) {\n      return (0, _uint.readBytes)(parent.text.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0x01;\n}); // application block\n\nvar applicationSchema = (0, _.conditional)({\n  application: [{\n    codes: (0, _uint.readBytes)(2)\n  }, {\n    blockSize: (0, _uint.readByte)()\n  }, {\n    id: function id(stream, result, parent) {\n      return (0, _uint.readString)(parent.blockSize)(stream);\n    }\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xff;\n}); // comment block\n\nvar commentSchema = (0, _.conditional)({\n  comment: [{\n    codes: (0, _uint.readBytes)(2)\n  }, subBlocksSchema]\n}, function (stream) {\n  var codes = (0, _uint.peekBytes)(2)(stream);\n  return codes[0] === 0x21 && codes[1] === 0xfe;\n});\nvar schema = [{\n  header: [{\n    signature: (0, _uint.readString)(3)\n  }, {\n    version: (0, _uint.readString)(3)\n  }]\n}, {\n  lsd: [{\n    width: (0, _uint.readUnsigned)(true)\n  }, {\n    height: (0, _uint.readUnsigned)(true)\n  }, {\n    gct: (0, _uint.readBits)({\n      exists: {\n        index: 0\n      },\n      resolution: {\n        index: 1,\n        length: 3\n      },\n      sort: {\n        index: 4\n      },\n      size: {\n        index: 5,\n        length: 3\n      }\n    })\n  }, {\n    backgroundColorIndex: (0, _uint.readByte)()\n  }, {\n    pixelAspectRatio: (0, _uint.readByte)()\n  }]\n}, (0, _.conditional)({\n  gct: (0, _uint.readArray)(3, function (stream, result) {\n    return Math.pow(2, result.lsd.gct.size + 1);\n  })\n}, function (stream, result) {\n  return result.lsd.gct.exists;\n}), // content frames\n{\n  frames: (0, _.loop)([gceSchema, applicationSchema, commentSchema, imageSchema, textSchema], function (stream) {\n    var nextCode = (0, _uint.peekByte)()(stream); // rather than check for a terminator, we should check for the existence\n    // of an ext or image block to avoid infinite loops\n    //var terminator = 0x3B;\n    //return nextCode !== terminator;\n\n    return nextCode === 0x21 || nextCode === 0x2c;\n  })\n}];\nvar _default = schema;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deinterlace = void 0;\n\n/**\r\n * Deinterlace function from https://github.com/shachaf/jsgif\r\n */\nvar deinterlace = function deinterlace(pixels, width) {\n  var newPixels = new Array(pixels.length);\n  var rows = pixels.length / width;\n\n  var cpRow = function cpRow(toRow, fromRow) {\n    var fromPixels = pixels.slice(fromRow * width, (fromRow + 1) * width);\n    newPixels.splice.apply(newPixels, [toRow * width, width].concat(fromPixels));\n  }; // See appendix E.\n\n\n  var offsets = [0, 4, 2, 1];\n  var steps = [8, 8, 4, 2];\n  var fromRow = 0;\n\n  for (var pass = 0; pass < 4; pass++) {\n    for (var toRow = offsets[pass]; toRow < rows; toRow += steps[pass]) {\n      cpRow(toRow, fromRow);\n      fromRow++;\n    }\n  }\n\n  return newPixels;\n};\n\nexports.deinterlace = deinterlace;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lzw = void 0;\n\n/**\r\n * javascript port of java LZW decompression\r\n * Original java author url: https://gist.github.com/devunwired/4479231\r\n */\nvar lzw = function lzw(minCodeSize, data, pixelCount) {\n  var MAX_STACK_SIZE = 4096;\n  var nullCode = -1;\n  var npix = pixelCount;\n  var available, clear, code_mask, code_size, end_of_information, in_code, old_code, bits, code, i, datum, data_size, first, top, bi, pi;\n  var dstPixels = new Array(pixelCount);\n  var prefix = new Array(MAX_STACK_SIZE);\n  var suffix = new Array(MAX_STACK_SIZE);\n  var pixelStack = new Array(MAX_STACK_SIZE + 1); // Initialize GIF data stream decoder.\n\n  data_size = minCodeSize;\n  clear = 1 << data_size;\n  end_of_information = clear + 1;\n  available = clear + 2;\n  old_code = nullCode;\n  code_size = data_size + 1;\n  code_mask = (1 << code_size) - 1;\n\n  for (code = 0; code < clear; code++) {\n    prefix[code] = 0;\n    suffix[code] = code;\n  } // Decode GIF pixel stream.\n\n\n  var datum, bits, count, first, top, pi, bi;\n  datum = bits = count = first = top = pi = bi = 0;\n\n  for (i = 0; i < npix;) {\n    if (top === 0) {\n      if (bits < code_size) {\n        // get the next byte\n        datum += data[bi] << bits;\n        bits += 8;\n        bi++;\n        continue;\n      } // Get the next code.\n\n\n      code = datum & code_mask;\n      datum >>= code_size;\n      bits -= code_size; // Interpret the code\n\n      if (code > available || code == end_of_information) {\n        break;\n      }\n\n      if (code == clear) {\n        // Reset decoder.\n        code_size = data_size + 1;\n        code_mask = (1 << code_size) - 1;\n        available = clear + 2;\n        old_code = nullCode;\n        continue;\n      }\n\n      if (old_code == nullCode) {\n        pixelStack[top++] = suffix[code];\n        old_code = code;\n        first = code;\n        continue;\n      }\n\n      in_code = code;\n\n      if (code == available) {\n        pixelStack[top++] = first;\n        code = old_code;\n      }\n\n      while (code > clear) {\n        pixelStack[top++] = suffix[code];\n        code = prefix[code];\n      }\n\n      first = suffix[code] & 0xff;\n      pixelStack[top++] = first; // add a new string to the table, but only if space is available\n      // if not, just continue with current table until a clear code is found\n      // (deferred clear code implementation as per GIF spec)\n\n      if (available < MAX_STACK_SIZE) {\n        prefix[available] = old_code;\n        suffix[available] = first;\n        available++;\n\n        if ((available & code_mask) === 0 && available < MAX_STACK_SIZE) {\n          code_size++;\n          code_mask += available;\n        }\n      }\n\n      old_code = in_code;\n    } // Pop a pixel off the pixel stack.\n\n\n    top--;\n    dstPixels[pi++] = pixelStack[top];\n    i++;\n  }\n\n  for (i = pi; i < npix; i++) {\n    dstPixels[i] = 0; // clear missing pixels\n  }\n\n  return dstPixels;\n};\n\nexports.lzw = lzw;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decompressFrames = exports.decompressFrame = exports.parseGIF = void 0;\n\nvar _gif = _interopRequireDefault(require(\"js-binary-schema-parser/lib/schemas/gif\"));\n\nvar _jsBinarySchemaParser = require(\"js-binary-schema-parser\");\n\nvar _uint = require(\"js-binary-schema-parser/lib/parsers/uint8\");\n\nvar _deinterlace = require(\"./deinterlace\");\n\nvar _lzw = require(\"./lzw\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar parseGIF = function parseGIF(arrayBuffer) {\n  var byteData = new Uint8Array(arrayBuffer);\n  return (0, _jsBinarySchemaParser.parse)((0, _uint.buildStream)(byteData), _gif[\"default\"]);\n};\n\nexports.parseGIF = parseGIF;\n\nvar generatePatch = function generatePatch(image) {\n  var totalPixels = image.pixels.length;\n  var patchData = new Uint8ClampedArray(totalPixels * 4);\n\n  for (var i = 0; i < totalPixels; i++) {\n    var pos = i * 4;\n    var colorIndex = image.pixels[i];\n    var color = image.colorTable[colorIndex];\n    patchData[pos] = color[0];\n    patchData[pos + 1] = color[1];\n    patchData[pos + 2] = color[2];\n    patchData[pos + 3] = colorIndex !== image.transparentIndex ? 255 : 0;\n  }\n\n  return patchData;\n};\n\nvar decompressFrame = function decompressFrame(frame, gct, buildImagePatch) {\n  if (!frame.image) {\n    console.warn('gif frame does not have associated image.');\n    return;\n  }\n\n  var image = frame.image; // get the number of pixels\n\n  var totalPixels = image.descriptor.width * image.descriptor.height; // do lzw decompression\n\n  var pixels = (0, _lzw.lzw)(image.data.minCodeSize, image.data.blocks, totalPixels); // deal with interlacing if necessary\n\n  if (image.descriptor.lct.interlaced) {\n    pixels = (0, _deinterlace.deinterlace)(pixels, image.descriptor.width);\n  }\n\n  var resultImage = {\n    pixels: pixels,\n    dims: {\n      top: frame.image.descriptor.top,\n      left: frame.image.descriptor.left,\n      width: frame.image.descriptor.width,\n      height: frame.image.descriptor.height\n    }\n  }; // color table\n\n  if (image.descriptor.lct && image.descriptor.lct.exists) {\n    resultImage.colorTable = image.lct;\n  } else {\n    resultImage.colorTable = gct;\n  } // add per frame relevant gce information\n\n\n  if (frame.gce) {\n    resultImage.delay = (frame.gce.delay || 10) * 10; // convert to ms\n\n    resultImage.disposalType = frame.gce.extras.disposal; // transparency\n\n    if (frame.gce.extras.transparentColorGiven) {\n      resultImage.transparentIndex = frame.gce.transparentColorIndex;\n    }\n  } // create canvas usable imagedata if desired\n\n\n  if (buildImagePatch) {\n    resultImage.patch = generatePatch(resultImage);\n  }\n\n  return resultImage;\n};\n\nexports.decompressFrame = decompressFrame;\n\nvar decompressFrames = function decompressFrames(parsedGif, buildImagePatches) {\n  return parsedGif.frames.filter(function (f) {\n    return f.image;\n  }).map(function (f) {\n    return decompressFrame(f, parsedGif.gct, buildImagePatches);\n  });\n};\n\nexports.decompressFrames = decompressFrames;","import { parseGIF, decompressFrames } from 'gifuct-js';\nimport Game from './game';\nimport GameObject from \"./game-object\";\nimport { IPosition, ISpeed, ISize } from './interfaces';\n\nexport default class Ship extends GameObject {\n  private maxSpeed: ISpeed;\n  protected lastSpeed: ISpeed;\n  public limitedToGameArea: boolean = false;\n  public exploded: boolean = false;\n  protected explosion: any;\n  protected explosionFrame: number | undefined;\n\n  constructor(game: Game, size: ISize, position: IPosition, maxSpeed: ISpeed) {\n    super(size.width, size.height, position, {x: 0, y: 0}, game);\n    this.maxSpeed = maxSpeed;\n    this.lastSpeed = maxSpeed;\n    \n    fetch('assets/explosion.gif')\n      .then(resp => resp.arrayBuffer())\n      .then(buff => parseGIF(buff))\n      .then(gif => {\n        this.explosion = decompressFrames(gif, true);\n        this.explosionFrame = 0;\n      });\n  }\n\n  moveLeft() {\n    if (this.position.x <= 0 && this.limitedToGameArea) {\n      this.speed.x = 0;\n    } else {\n      this.speed.x = -this.maxSpeed.x;\n    }\n  }\n  \n  moveRight() {\n    if (this.position.x + this.width >= this.game.gameWidth && this.limitedToGameArea) {\n      this.speed.x = 0;\n    } else {\n      this.speed.x = this.maxSpeed.x;\n    };\n  }\n  \n  moveUp() {\n    if (this.position.y <= 0 && this.limitedToGameArea) {\n      this.speed.y = 0;\n    } else {\n      this.speed.y = -this.maxSpeed.y;\n    }\n  }\n  \n  moveDown() {\n    if (this.position.y + this.height >= this.game.gameHeight && this.limitedToGameArea) {\n      this.speed.y = 0;\n    } else {\n      this.speed.y = this.maxSpeed.y;\n    }\n  }\n  \n  stop() {\n    this.lastSpeed = {...this.speed};\n    this.speed.x = 0;\n    this.speed.y = 0; \n    return;\n  }\n\n  update() {\n    this.speedUpdate();\n  }\n\n  _draw(ctx: CanvasRenderingContext2D) {\n    if (this.image) {\n      ctx.save();\n      ctx.translate(this.position.x + this.width / 2, this.position.y + this.height / 2); \n      ctx.rotate(this.angle);\n      ctx.translate(-(this.position.x + this.width / 2), -(this.position.y + this.height / 2)); \n      ctx.drawImage(this.image, this.position.x, this.position.y, this.width, this.height);\n      ctx.restore();\n    } else {\n      ctx.fillStyle = this.color;\n      ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n    }\n  }\n}\n","import { SHIP_MAX_SPEED, OBJECT_TYPE, GAMESTATE } from \"./constants\";\nimport Rocket from \"./rocket\";\nimport Ship from \"./ship\";\nimport Game from './game';\n\nconst START_POSITION = { x: 100, y: 100};\nexport default class PlayerShip extends Ship {\n  constructor(game: Game) {\n    super(game, { width: 40, height: 40 }, START_POSITION, SHIP_MAX_SPEED);\n    this.type = OBJECT_TYPE.PLAYER_SHIP;\n    this.limitedToGameArea = true;\n    this.color = '#00f';\n    this.loadImage('assets/player-ship.png');\n    this.angle = 90 * Math.PI / 180;\n  }\n\n  shoot() {\n    const rocketSpeed = (this.speed.x === 0 && this.speed.y === 0) && (this.lastSpeed.x !== 0 || this.lastSpeed.y !== 0) ? this.lastSpeed : this.speed;\n    const rocketPosition = {\n      x: this.position.x + this.width / 2,\n      y: this.position.y + this.height / 2,\n    }\n    const rocket = new Rocket(this.game, rocketPosition, rocketSpeed);\n    this.game.addObject(rocket);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    if (this.exploded) {\n      if (this.explosion[this.explosionFrame]) {\n        const frame = this.explosion[this.explosionFrame];\n        const tempCanvas = document.createElement('canvas');\n        const tempCtx = tempCanvas.getContext('2d');\n\n        const dims = frame.dims;\n        tempCanvas.width = dims.width;\n        tempCanvas.height = dims.height;\n        const frameImageData = tempCtx.createImageData(dims.width, dims.height);\n\n        frameImageData.data.set(frame.patch);\n        tempCtx.putImageData(frameImageData, 0, 0);\n\n        ctx.drawImage(tempCanvas, this.position.x, this.position.y, this.width, this.height)\n\n        this.explosionFrame++;\n      } else {\n        this.game.gameState = GAMESTATE.MENU;\n      }\n    } else {\n        this._draw(ctx);\n      }\n  }\n}","import { randomIntFromInterval } from \"./utils\";\nimport { OBJECT_TYPE } from \"./constants\";\nimport Game from \"./game\";\nimport GameObject from \"./game-object\"\nimport { IPosition, ISize, ISpeed } from \"./interfaces\";\n\nconst PARTICLE_SPEED: readonly<ISpeed> = { x: 1, y: 1 };\nconst PARTICLE_SIZE: readonly<ISize> = { width: 2, height: 2 };\n\nexport default class Particle extends GameObject {\n  \n  constructor(game: Game, position: IPosition) {\n    const particleSpeed: ISpeed = {\n      x: PARTICLE_SPEED.x * randomIntFromInterval(-10, 10),\n      y: PARTICLE_SPEED.y * randomIntFromInterval(-10, 10)\n    };\n    super(PARTICLE_SIZE.width, PARTICLE_SIZE.height, position, particleSpeed, game);\n    this.type = OBJECT_TYPE.PARTICLE;\n    this.color = '#fffaff';\n  }\n\n  update() { \n    this.speedUpdate();\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n  }\n}","import { randomIntFromInterval } from \"./utils\";\nimport Game from \"./game\";\nimport { IPosition } from \"./interfaces\";\nimport Particle from './particle';\n\nexport default class ExplodedShip {\n  private position: IPosition;\n  private numberOfParticles: number\n\n  constructor(game: Game, position: IPosition) {\n    this.position = position;\n    this.numberOfParticles = randomIntFromInterval(10, 20);\n\n    for (let i = 0; i < this.numberOfParticles; i++) {\n      const particle = new Particle(game, this.position);\n      game.addObject(particle);\n    }\n  }\n}","import { detectCollision, outsideOfGame, randomIntFromInterval, plusOrMinus } from \"./utils\";\nimport { OBJECT_TYPE } from \"./constants\";\nimport ExplodedShip from './exploded-ship';\nimport Game from \"./game\";\nimport Ship from \"./ship\";\n\nexport default class EnemyShip extends Ship {\n\n  constructor(game: Game) {\n    const startingPositionY: number = randomIntFromInterval(0, 600); \n    super(game, { width: 30, height: 30}, { x: 700, y: startingPositionY }, { x: -1, y: 0});\n    this.speed = { x: -1, y: 0};\n    this.type = OBJECT_TYPE.ENEMY_SHIP;\n    this.color = '#0f0';\n    this.loadImage('assets/alien-ship2.png');\n    setInterval(() => {\n      this.randomWay();\n    }, 700);\n  }\n\n  randomWay() {\n    this.speed.x = plusOrMinus();\n    this.speed.y = plusOrMinus();\n  }\n\n  update() {\n    // this.randomWay();\n    this.speedUpdate();\n    if (outsideOfGame(this, this.game)){\n      this.isDeleted = true;\n    } else {\n      const playerShip = this.game.gameObjects.find((object: any) => object.type === OBJECT_TYPE.PLAYER_SHIP);\n      if (playerShip && detectCollision(this, playerShip)){\n        playerShip.exploded = true;\n      }\n    }\n\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    if (this.exploded) {\n      if (this.explosion[this.explosionFrame]) {\n        const frame = this.explosion[this.explosionFrame];\n        const tempCanvas = document.createElement('canvas');\n        const tempCtx = tempCanvas.getContext('2d');\n\n        const dims = frame.dims;\n        tempCanvas.width = dims.width;\n        tempCanvas.height = dims.height;\n        const frameImageData = tempCtx.createImageData(dims.width, dims.height);\n\n        frameImageData.data.set(frame.patch);\n        tempCtx.putImageData(frameImageData, 0, 0);\n\n        ctx.drawImage(tempCanvas, this.position.x, this.position.y, this.width, this.height)\n\n        this.explosionFrame++;\n      } else {\n        new ExplodedShip(this.game, this.position);\n        this.isDeleted = true;\n      }\n      return;\n    } else {\n      this._draw(ctx);\n    }\n  }\n\n}","import { IMenuButton, IPosition, ISize } from \"./interfaces\";\n\nexport default class GameScreen {\n  private size: ISize;\n  private content: string = '';\n  private buttonElements: Array<any> = [];\n  private imageElements: Array<any> = [];\n\n  constructor(size: ISize) {\n    this.size = size;\n  }\n\n  setContent(content: string, position?: IPosition) {\n    this.content = content;\n  }\n\n  addMenuButton(menuButton: IMenuButton) {\n    this.buttonElements.push(menuButton);\n  }\n\n  addImages(image: any) {\n    this.imageElements.push(image);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.rect(0, 0, this.size.width, this.size.height);\n    ctx.fillStyle = \"rgba(0,0,0,1)\";\n    ctx.fill();\n\n    if (this.content){\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(this.content, this.size.width / 2, this.size.height / 2);\n    }\n\n    if (this.buttonElements.length > 0) {\n      this.buttonElements.forEach(element => {\n        ctx.font = \"30px Arial\";\n        ctx.fillStyle = \"white\";\n        ctx.textAlign = \"center\";\n        ctx.beginPath();\n        ctx.rect(element.x, element.y, element.width, element.height); \n        ctx.fillStyle = element.fillStyle;\n        ctx.lineWidth = element.lineWidth;\n        ctx.strokeStyle = element.strokeStyle; \n        ctx.stroke();\n        ctx.closePath();\n        ctx.font = element.font;\n        ctx.fillStyle = element.fillStyle;\n        ctx.fillText(element.content, element.x + element.width / 2 , element.y + element.height / 2 + 10);\n      });\n    }\n\n    if (this.imageElements.length > 0) {\n      this.imageElements.forEach(image => {\n        ctx.drawImage(image.image, this.size.width / 2 - image.size.width / 2, 80, image.size.width, image.size.height);\n      });\n    }\n  }\n}","export default class ScrollingSprite {\n    private image: any;\n    private x: number;\n    private y: number;\n    private width: number;\n    private height: number;\n    private speed: number;\n\n    constructor(image: any, x: number, y: number, width: number, height: number, speed: number) {\n        this.image = image;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.speed = speed;\n    }\n\n    scroll() {\n        this.x -= this.speed;\n        if (this.x <= -this.width) {\n            this.x = this.width - 1;\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n    }\n}","import { IPosition } from './interfaces';\n\nexport default class MouseInputHandler {\n  private canvas: HTMLCanvasElement;\n  constructor(elements: Array<any>) {\n    this.canvas = document.querySelector('#game-canvas');\n    if (!this.canvas) return;\n \n    this.canvas.addEventListener('click', (event: MouseEvent) => {\n      const mousePos = this.getMousePos(this.canvas, event);\n      elements.forEach(element => {\n        if (this.isInside(mousePos, element)) {\n          if (element.action) element.action();\n          return;\n        }\n      });\n    }, false);\n  }\n\n  getMousePos(canvas: HTMLCanvasElement, event: MouseEvent) {\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    };\n  }\n  isInside(pos: IPosition, rect: any) {\n    return (\n      pos.x >= rect.x && \n      pos.x <= (rect.x + rect.width) && \n      pos.y <= (rect.y + rect.height) && \n      pos.y >= rect.y);\n  }\n}\n","import { ISize } from \"./interfaces\";\nimport GameScreen from \"./game-screen\";\nimport MouseInputHandler from \"./mouse-input\";\nimport Game from \"./game\";\nimport { GAMESTATE } from \"./constants\";\n\nexport default class MenuScreen extends GameScreen {\n  public game: Game;\n  constructor(size: ISize, game: Game) {\n    super(size);\n    this.game = game;\n\n    const buttons = [\n      {\n        width: 300,\n        height: 50,\n        x: (size.width - 300) / 2,\n        y: 150 + (size.height - 220) / 4,\n        content: 'GAME1',\n        lineWidth: 2,\n        fillStyle: '#f3f3f3',\n        strokeStyle: '#242424',\n        font: 'Arial',\n        action: () => {\n          this.game.gameState = GAMESTATE.RUNNING;\n        }\n      },\n      {\n        width: 300,\n        height: 50,\n        x: (size.width - 300) / 2,\n        y: 150 + (size.height - 220) / 4 * 2,\n        content: 'GAME2',\n        lineWidth: 2,\n        fillStyle: '#f3f3f3',\n        strokeStyle: '#242424',\n        font: 'Arial',\n        action: () => {\n          this.game.gameState = GAMESTATE.RUNNING;\n        }\n      },\n      {\n        width: 300,\n        height: 50,\n        x: (size.width - 300) / 2,\n        y: 150 + (size.height - 220) / 4 * 3,\n        content: 'GAME3',\n        lineWidth: 2,\n        fillStyle: '#f3f3f3',\n        strokeStyle: '#242424',\n        font: 'Arial',\n        action: () => {\n          this.game.gameState = GAMESTATE.RUNNING;\n        }\n      },\n      {\n        width: 300,\n        height: 50,\n        x: (size.width - 300) / 2,\n        y: 150 + (size.height - 220) / 4 * 4,\n        content: 'EXIT',\n        lineWidth: 2,\n        fillStyle: '#f3f3f3',\n        strokeStyle: '#242424',\n        font: 'Arial',\n        action: () => {\n          window.location.href = 'https://www.playngo.com/';\n        }\n      }\n    ];\n\n    if (!this.game.isMouselistenerAdded) {\n      new MouseInputHandler(buttons);\n      this.game.isMouselistenerAdded = true;\n    }\n\n    const logo = new Image();\n    logo.src = 'assets/millennium-falcon.png';\n    const logoImage = {\n      image: logo,\n      size: {\n        width: 100,\n        height: 100\n      }\n    }\n    this.addImages(logoImage);\n\n    buttons.forEach(button => {\n      this.addMenuButton(button);\n    })\n  }\n}","import { ISize } from \"./interfaces\";\nimport GameScreen from \"./game-screen\";\nimport Game from \"./game\";\nimport { GAMESTATE } from \"./constants\";\n\nexport default class SplashScreen extends GameScreen {\n  public game: Game;\n  private image: any;\n  private angle: number = 10;\n  constructor(size: ISize, game: Game) {\n    super(size);\n    this.game = game;\n    this.image = new Image(300, 300);\n    this.image.src = 'assets/millennium-falcon.png';\n\n    setTimeout(() => {\n        this.game.gameState = GAMESTATE.MENU;\n    }, 2000);\n  }\n\n  update() {\n    this.angle += 4;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, this.game.gameWidth, this.game.gameHeight);\n    ctx.save();\n    ctx.translate(this.game.gameWidth / 2, this.game.gameHeight / 2); \n    ctx.rotate(this.angle * Math.PI / 180);\n    ctx.translate(-(this.game.gameWidth / 2), -(this.game.gameHeight / 2)); \n    ctx.drawImage(this.image, this.game.gameWidth / 2 - 150, this.game.gameHeight / 2 -150, 300, 300);\n    ctx.restore();\n  }\n}","import KeyInputHandler from \"./key-input\";\nimport { GAMESTATE } from \"./constants\";\nimport PlayerShip from \"./player-ship\";\nimport EnemyShip from \"./enemy-ship\";\nimport Rocket from \"./rocket\";\nimport GameScreen from \"./game-screen\";\nimport ScrollingSprite from './scrolling-sprite';\nimport Particle from \"./particle\";\nimport MenuScreen from \"./menu-screen\";\nimport SplashScreen from \"./splash-screen\";\n\nconst BACKGROUND_IMAGE = 'assets/space.png';\nconst BACKGROUND_SPEED = 0.3;\n\nexport default class Game {\n  private playerShip: PlayerShip;\n  private sprites: Array<any> = [];\n  protected isMouselistenerAdded: boolean = false;\n  public gameWidth: number;\n  public gameHeight: number;\n  public gameState: number;\n  public gameObjects: Array<PlayerShip | Rocket | EnemyShip | Particle> = [];\n  public resources: any = {};\n  private screens: any = {};\n\n  constructor(gameWidth: number, gameHeight: number) {\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n    this.gameState = GAMESTATE.SPLASH_SCREEN;\n    this.gameObjects = [];\n\n    this.resources['backgroundImage'] = new Image(this.gameWidth, this.gameHeight);\n    this.resources['backgroundImage'].src = BACKGROUND_IMAGE;\n    this.resources['backgroundImage'].position = {\n      x: 0,\n      y: 0\n    };\n\n    const bgSprite = new ScrollingSprite(this.resources['backgroundImage'], 0, 0, this.gameWidth, this.gameHeight, BACKGROUND_SPEED);\n    const bgSprite2 = new ScrollingSprite(this.resources['backgroundImage'], -this.gameWidth, 0, this.gameWidth, this.gameHeight, BACKGROUND_SPEED);\n    this.sprites = [bgSprite, bgSprite2];\n\n\n    this.playerShip = new PlayerShip(this);\n\n    this.gameObjects = [this.playerShip];\n\n    new KeyInputHandler(this.playerShip, this);\n\n    this.screens[GAMESTATE.SPLASH_SCREEN] = new SplashScreen({width: this.gameWidth, height: this.gameHeight}, this);\n    this.screens[GAMESTATE.MENU] = new MenuScreen({width: this.gameWidth, height: this.gameHeight}, this);\n    this.screens[GAMESTATE.GAMEOVER] = new GameScreen({width: this.gameWidth, height: this.gameHeight});\n\n    this.initNewEnemies();\n  }\n \n  addObject(object: PlayerShip | Rocket | EnemyShip | Particle) {\n    this.gameObjects.push(object);\n  }\n\n  start() {\n    if (this.gameState === GAMESTATE.RUNNING) return;\n    this.gameState = GAMESTATE.RUNNING;\n    this.gameObjects = [this.playerShip];\n  }\n\n  menu() {\n    if (this.gameState === GAMESTATE.MENU) return;\n    this.gameState = GAMESTATE.MENU;\n    this.gameObjects = [this.playerShip];    \n  }\n\n  update(deltaTime: number) {\n    this.gameObjects.forEach((object: PlayerShip | Rocket | EnemyShip | Particle) => {\n      object.update();\n    });\n    this.gameObjects = this.gameObjects.filter(object => !object.isDeleted);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    if (this.gameState === GAMESTATE.SPLASH_SCREEN) {\n      this.screens[GAMESTATE.SPLASH_SCREEN].update();\n      this.screens[GAMESTATE.SPLASH_SCREEN].draw(ctx);\n    }\n\n    if (this.gameState === GAMESTATE.MENU) {\n      this.screens[GAMESTATE.MENU].draw(ctx);\n    }\n\n    if (this.gameState === GAMESTATE.GAMEOVER) {\n      this.screens[GAMESTATE.GAMEOVER].setContent('GAME OVER');\n      this.screens[GAMESTATE.GAMEOVER].draw(ctx);\n    }\n\n    if (this.gameState === GAMESTATE.RUNNING) {\n      this.sprites.forEach(sprite => {\n        sprite.scroll();\n        sprite.draw(ctx);\n      });\n\n      this.gameObjects.forEach((object) => object.draw(ctx));\n    }\n  }\n\n  initNewEnemies() {\n    setInterval(() => {\n      if (this.gameState === GAMESTATE.RUNNING) {\n        const enemy = new EnemyShip(this);\n        this.gameObjects.push(enemy);\n      }\n  }, 2000);\n  }\n\n}\n","import Game from \"./game\";\n\nlet canvas = <HTMLCanvasElement>document.querySelector(\"#game-canvas\");\nlet ctx = canvas.getContext(\"2d\");\n\nconst GAME_WIDTH = 800;\nconst GAME_HEIGHT = 600;\n\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\n\nlet lastTime: number = 0;\nfunction gameLoop(timestamp: number) {\n  // console.log(\"gameLoop\", timestamp);\n  let deltaTime: number = timestamp - lastTime;\n  lastTime = timestamp;\n\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\n  game.update(deltaTime);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n"]}